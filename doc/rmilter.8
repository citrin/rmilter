.\" Copyright (c) 2007-2012, Vsevolod Stakhov
.\" All rights reserved.

.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions are met:
.\" Redistributions of source code must retain the above copyright notice, this
.\" list of conditions and the following disclaimer. Redistributions in binary form
.\" must reproduce the above copyright notice, this list of conditions and the
.\" following disclaimer in the documentation and/or other materials provided with
.\" the distribution. Neither the name of the author nor the names of its
.\" contributors may be used to endorse or promote products derived from this
.\" software without specific prior written permission.

.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
.\" CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
.\" OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.Dd May  12, 2016
.Dt RMILTER 8
.Os
.Sh NAME
.Nm rmilter
.Nd milter for sendmail with many abilities designed for distributed MX network
.Sh SYNOPSIS
.Nm rmilter
.Op Fl h
.Op Fl c Ar config_file
.Sh DESCRIPTION
The
.Nm
utility is designed to act as milter for
.Xr sendmail 8
MTA. It provides several filter and mail scan features, among them are:
.Bl -bullet -compact
.It
Clamav scanning (via unix or tcp socket).
.It
Spamd scanning (supports rspamd and spamassassin)
.It
Spf checking (via libspf2)
.It
Greylisting with memcached/redis upstream
.It
Ratelimit with memcached/redis upstream
.It
Auto-whitelisting (internal and via memcached/redis upstream)
.It
Regexp checks.
.It
DCC checking (optional)
.It
Passing messages and/or their headers to beanstalk servers
.El
.Pp
The following additional options are supported:
.Bl -tag -width indent
.It Fl n
do not daemonize on startup
.It Fl h
Show greeting message, version of
.Nm
and exit
.It Fl c Ar config_file
Specify config file to use
.El
.Pp
All
.Nm
configuration is placed in rmilter.conf file.
.Sh CONFIGURATION FILE
.\" Format
The configuration file has format:
.Bl -tag -width indent
.It Aq name
=
.Aq value
;
.El
.Pp
.\" Value types
Value may be:
.Bl -bullet -compact
.It
String (may not contain spaces)
.It
Quoted string (if string may contain spaces)
.It
Numeric value
.It
Flag (y, Yes or n, No)
.It
Ip or network (eg. 127.0.0.1, 192.168.1.0/24)
.It
Socket argument (eg. host:port or /path/to/socket)
.It
Regexp (eg. /Match*/)
.It
List (eg. value1, value2, value3)
.It
Recipients list (user, user@domain, @domain)
.It
Time argument (eg. 10s, 5d)
.El
.Pp
Some directives MUST be specified only in specified sections. Section definition looks like:
.Bd -literal -offset indent
section_name {
	section_directive;
	...
};
.Ed
Common sections:
.\" Sections
.Bl -bullet -compact
.It
clamav - clamav definitions
.It
spamd - spamd (spamassassin or rspamd) definitions
.It
limits - limits definitions
.It
greylisting - greylisting definitions
.It
rule - regexp rule definition (a section per rule)
.El
.Pp
Directives that can be defined in config file:
.Bl -bullet
.It
.\" Global section
Global section:
.Bl -dash
.It
.Sy pidfile
- specify path to pidfile
.Dl Em Default: Li /var/run/rmilter.pid
.It
.Sy tempdir
- specify path to temporary directory. For maximum performance it is recommended to put it on memory file system.
.Dl Em Default: Li $TMPDIR
.It
.Sy tempfiles_mode
- mode for files created in tempdir
.Dl Em Default: Li 0600
.It
.Sy bind_socket
- socket credits for local bind:
.Bl -enum -compact
.It
unix:/path/to/file - bind to local socket
.It
inet:port@host - bind to inet socket
.El
.Dl Em Default: Li bind_socket = unix:/var/tmp/rmilter.sock
.It
.Sy max_size
- maximum size of scanned message for clamav, spamd and dcc.
.Dl Em Default: Li 0 Pq no limit
.It
.Sy strict_auth
- strict checks for mails from authenticated senders
.Dl Em Default: Li no
.It
.Sy our_networks
- list of ips or nets mail for which should be treated as for authenticated users
.Dl Em Default: Li empty
.It
.Sy spf_domains
- list of domains that would be checked with spf
.Dl Em Default: Li empty Pq spf disabled
.It
.Sy use_dcc
- flag that specify whether we should use dcc checks for mail
.Dl Em Default: Li no
.It
.Sy whitelist
- global recipients whitelist
.Dl Em Default: Li no
.El
.It
.\" Clamav section
Clamav section:
.Bl -dash
.It
.Sy servers
- clamav socket definitions in format:
.Bl -enum -compact
.It
/path/to/file
.It
host[:port]
.El
.Dl sockets are separated by ','
.Dl Em Default: Li empty
.It
.Sy connect_timeout
- timeout in miliseconds for connecting to clamav
.Dl Em Default: Li 1s
.It
.Sy port_timeout
- timeout in miliseconds for waiting for clamav port response
.Dl Em Default: Li 4s
.It
.Sy results_timeout
- timeout in miliseconds for waiting for clamav response
.Dl Em Default: Li 20s
.It
.Sy error_time
- time in seconds during which we are counting errors
.Dl Em Default: Li 10
.It
.Sy dead_time
- time in seconds during which we are thinking that server is down
.Dl Em Default: Li 300
.It
.Sy maxerrors
- maximum number of errors that can occur during error_time to make us thinking that this upstream is dead
.Dl Em Default: Li 10
.It
.Sy whitelist
- list of ips or nets that should be not checked with clamav
.Dl Em Default: Li empty
.El
.It
.\" Spamd section
Spamd section:
.Bl -dash
.It
.Sy servers
- rspamd socket definitions in format:
.Bl -enum -compact
.It
/path/to/file
.It
host[:port]
.El
.Dl sockets are separated by Ql ,
.Dl Em Default: Li empty (spam checks disabled)
.It
.Sy connect_timeout
- timeout in miliseconds for connecting to spamd
.Dl Em Default: Li 1s
.It
.Sy results_timeout
- timeout in miliseconds for waiting for spamd response
.Dl Em Default: Li 20s
.It
.Sy error_time
- time in seconds during which we are counting errors
.Dl Em Default: Li 10
.It
.Sy dead_time
- time in seconds during which we are thinking that server is down
.Dl Em Default: Li 300
.It
.Sy maxerrors
- maximum number of errors that can occur during error_time to make us thinking that this upstream is dead
.Dl Em Default: Li 10
.It
.Sy reject_message
- reject message for spam (quoted string)
.Dl Em Default: Dq Spam message rejected; If this is not spam contact abuse team
.It
.Sy spamd_soft_fail
- if action is not reject use it for other actions (flag)
.Dl Em Default: Li true
.It
.Sy spamd_never_reject
- never reject a message even if spamd action is 'reject', add header instead (flag)
.Dl Em Default: Li false
.It
.Sy spamd_temp_fail
- return temporary failure if spam servers could not be reached (ignore otherwise) (flag)
.Dl Em Default: Li false
.It
.Sy spamd_greylist
- greylist message only if action is greylist (flag)
.Dl Em Default: Li true
.It
.Sy spam_header
- add specified header if action is add_header and spamd_soft_fail os turned on
.Dl Em Default: Dq X-Spam
.It
.Sy spam_header_value
- add specified value for spam_header
.Dl Em Default: Dq yes
.It
.Sy spamd_spam_add_header
- additionaly add header (from combination of spam_header and spam_header_value) on rewrite
  action. (flag)
.Dl Em Default: Dq yes
.It
.Sy rspamd_metric
- rspamd metric that would define whether we reject message as spam or not (quoted string)
.Dl Em Default: Dq default
.It
.Sy whitelist
- list of ips or nets that should be not checked with spamd
.Dl Em Default: Li empty
.It
.Sy extended_spam_headers
- add extended spamd headers to messages, is useful for debugging or private mail servers (flag)
.Dl Em Default: Li false
.It
.Sy retry_timeout
- timeout in miliseconds to retry check if the current check has failed
.Dl Em Default: Li 1s
.It
.Sy retry_count
- number of retries before giving up
.Dl Em Default: Li 5
.It
.Sy tempfail_on_error
- send temporary SMTP error if we have failed to scan a message for spam
.Dl Em Default: Li false
.El
.It
.\" Memcached (or redis) section
Memcached/redis section:
.Bl -dash
.It
.Sy servers_grey
- memcached/redis servers for greylisting in format:
.Dl host Bo :port Bc Bo , host Bo :port Bc Bc
.Dl Em Default: Li empty
.It
.Sy servers_white
- memcached/redis servers for whitelisting in format similar to that is used in
.Em servers_grey
.Dl Em Default: Li empty
.It
.Sy servers_limits
- memcached/redis servers used for limits storing, can not be mirrored
.Dl Em Default: Li empty
.It
.Sy connect_timeout
- timeout in miliseconds for connecting to memcached/redis
.Dl Em Default: Li 1s
.It
.Sy error_time
- time in seconds during which we are counting errors
.Dl Em Default: Li 10
.It
.Sy dead_time
- time in seconds during which we are thinking that server is down
.Dl Em Default: Li 300
.It
.Sy maxerrors
- maximum number of errors that can occur during error_time to make us thinking that this upstream is dead
.Dl Em Default: Li 10
.El
.It
.\" Beanstalk section
Beanstalk section:
.Bl -dash
.It
.Sy servers
- beanstalk servers for pushing headers in format:
.Dl host Bo :port Bc Bo , host Bo :port Bc Bc
.Dl Em Default: Li empty
.It
.Sy copy_server
- address of server to which rmilter should send all messages copies
.Dl Em Default: Li empty
.It
.Sy spam_server
- address of server to which rmilter should send spam messages copies
.Dl Em Default: Li empty
.It
.Sy connect_timeout
- timeout in miliseconds for connecting to beanstalk
.Dl Em Default: Li 1s
.It
.Sy error_time
- time in seconds during which we are counting errors
.Dl Em Default: Li 10
.It
.Sy dead_time
- time in seconds during which we are thinking that server is down
.Dl Em Default: Li 300
.It
.Sy maxerrors
- maximum number of errors that can occur during error_time to make us thinking that this upstream is dead
.Dl Em Default: Li 10
.It
.Sy id_regexp
- regexp that defines for which messages we should put the whole message to beanstalk, not only headers,
now this regexp checks only In-Reply-To headers
.Dl Em Default: Li empty
.It
.Sy send_beanstalk_headers
- defines whether we should send headers to beanstalk servers (from servers option)
.Dl Em Default: Li no
.It
.Sy send_beanstalk_copy
- defines whether we should send copy of messages to beanstalk server (from copy_server option)
.Dl Em Default: Li no
.It
.Sy send_beanstalk_spam
- defines whether we should send copy of spam messages to beanstalk server (from spam_server option)
.Dl Em Default: Li no
.El
.It
.\" Greylisting section
Greylisting section:
.Bl -dash
.It
.Sy timeout (required)
- time during which we mark message greylisted
.Dl Em Default: Li 300s
.It
.Sy expire (required)
- time during which we save a greylisting record
.Dl Em Default: Li 1d
.It
.Sy whitelist
- list of ip addresses or networks that should be whitelisted from greylisting
.Dl Em Default: Li empty
.It
.Sy awl_enable
- enable internal auto-whitelist mechanics
.Dl Em Default: Li no
.It
.Sy awl_pool
- size for in-memory auto whitelist
.Dl Em Default: Li 10M
.It
.Sy awl_hits
- number of messages (from this ip) that passes greylisting to put this ip into whitelist
.Dl Em Default: Li 10
.It
.Sy awl_ttl
- time to live for ip address in auto whitelist
.Dl Em Default: Li 3600s
.El
.It
.\" Limits section
Limits section.
.Pp
Rate limits are implemented as leaked bucket, so first value is bucket burst - is peak value for messages in bucket
(after reaching it bucket is counted as overflowed and new messages are rejected), second value is rate (how much messages
can be removed from bucket each second). It can be schematically displayed:
.Bd -literal
	|------------------|          <----- current value
	|                  |
	|------------------|          <----- burst
	|                  |
	|                  |
	|                  |
	|                  |
	\\                  /
	 ----------------- .....      <----- rate (speed of emptying)
.Ed
.Bl -dash
.It
.Sy limit_whitelist_ip
- don't check limits for specified ips
.Dl Em Default: Li empty
.It
.Sy limit_whitelist_rcpt
- don't check limits for specified recipients
.Dl Em Default: Li no
.It
.Sy limit_bounce_addrs
- list of address that require more strict limits
.Dl Em Default: Li postmaster, mailer-daemon, symantec_antivirus_for_smtp_gateways, Aq , null, fetchmail-daemon
.It
.Sy limit_bounce_to
- limits bucket for bounce messages (only rcpt to)
.Dl Em Default: Li 5:0.000277778
.It
.Sy limit_bounce_to_ip
- limits bucket for bounce messages (only rcpt to per one source ip)
.Dl Em Default: Li 5:0.000277778
.It
.Sy limit_to
- limits bucket for non-bounce messages (only rcpt to)
.Dl Em Default: Li 20:0.016666667
.It
.Sy limit_to_ip
- limits bucket for non-bounce messages (only rcpt to per one source ip)
.Dl Em Default: Li 30:0.025
.It
.Sy limit_to_ip_from
- limits bucket for non-bounce messages (msg from, rcpt to per one source ip)
.Dl Em Default: Li 100:0.033333333
.El
.It
.\" DKIM section
DKIM section.
.Pp
.No Dkim can be used to sign messages by Nm . Dkim support must be provided with opendkim library and
.Nm
must be configured with
.Ar --enable-dkim
option.
.Bl -dash
.It
.Sy header_canon
- canonization of headers (simple or relaxed)
.Dl Em Default: Li simple
.It
.Sy body_canon
- canonization of body (simple or relaxed)
.Dl Em Default: Li simple
.It
.Sy sign_alg
- signature algorithm (sha1 for rsa-sha1 and sha256 for rsa-sha256)
.Dl Em Default: Li sha1
.It
.Sy auth_only
- sign mail for authorized users only
.Dl Em Default: Li yes
.It
.Sy fold_header
- fold the resulting header (can break some bad MTA)
.Dl Em Default: Li no
.It
.Sy domain
- domain entry must be enclosed in braces {}
.Bl -bullet
.It
.Sy key
- path to private key
.It
.Sy domain
- domain to be used for signing (this matches with SMTP FROM data)
.It
.Sy selector
- dkim DNS selector (e.g. for selector
.Em dkim
and domain
.Em example.com
DNS TXT record should be for dkim._domainkey.example.com).
.It
.Sy sign_networks
- also sign mail from these IP networks
.El
.El
.El
.Sh EXAMPLE CONFIG
.Bd -literal
# pidfile - path to pid file
# Default: pidfile = /var/run/rmilter.pid

pidfile = /var/run/rmilter/rmilter.pid;


clamav {
	# servers - clamav socket definitions in format:
	# /path/to/file
	# host[:port]
	# sockets are separated by ','
	# Default: empty
	servers = clamav.test.ru, clamav.test.ru, clamav.test.ru;
	# connect_timeout - timeout in miliseconds for connecting to clamav
	# Default: 1s
	connect_timeout = 1s;

	# port_timeout - timeout in miliseconds for waiting for clamav port response
	# Default: 4s
	port_timeout = 4s;

	# results_timeout - timeout in miliseconds for waiting for clamav response
	# Default: 20s
	results_timeout = 20s;

	# error_time - time in seconds during which we are counting errors
	# Default: 10
	error_time = 10;

	# dead_time - time in seconds during which we are thinking that server is down
	# Default: 300
	dead_time = 300;

	# maxerrors - maximum number of errors that can occur during error_time to make us thinking that
	# this upstream is dead
	# Default: 10
	maxerrors = 10;
};

spamd {
	# servers - spamd socket definitions in format:
	# /path/to/file
	# host[:port]
	# sockets are separated by ','
	# Default: empty
	servers = clamav.test.ru, clamav.test.ru, clamav.test.ru;
	# connect_timeout - timeout in miliseconds for connecting to spamd
	# Default: 1s
	connect_timeout = 1s;

	# results_timeout - timeout in miliseconds for waiting for spamd response
	# Default: 20s
	results_timeout = 20s;

	# error_time - time in seconds during which we are counting errors
	# Default: 10
	error_time = 10;

	# dead_time - time in seconds during which we are thinking that server is down
	# Default: 300
	dead_time = 300;

	# maxerrors - maximum number of errors that can occur during error_time to make us thinking that
	# this upstream is dead
	# Default: 10
	maxerrors = 10;

	# reject_message - reject message for spam
	# Default: "Spam message rejected; If this is not spam contact abuse team"
	reject_message = "Spam message rejected; If this is not spam contact abuse at example.com";

	# whitelist - list of ips or nets that should be not checked with spamd
	# Default: empty
	whitelist = 127.0.0.1/32, 192.168.0.0/16;
};

redis {
	# servers_grey - memcached servers for greylisting in format:
	# host[:port][, host[:port]]
	# It is possible to make memcached mirroring, its syntax is {server1, server2}
	servers_grey = {localhost, memcached.test.ru}, memcached.test.ru:11211;

	# servers_white - memcached servers for whitelisting in format similar to that is used
	# in servers_grey
	# servers_white = {localhost, memcached.test.ru}, memcached.test.ru:11211;

	# servers_limits - memcached servers used for limits storing, can not be mirrored
	servers_limits = memcached.test.ru, memcached.test.ru:11211;

	# connect_timeout - timeout in miliseconds for waiting for memcached
	# Default: 1s
	connect_timeout = 1s;

	# error_time - time in seconds during which we are counting errors
	# Default: 10
	error_time = 10;

	# dead_time - time in seconds during which we are thinking that server is down
	# Default: 300
	dead_time = 300;

	# maxerrors - maximum number of errors that can occur during error_time to make us thinking that
	# this upstream is dead
	# Default: 10
	maxerrors = 10;
};

# bind_socket - socket credits for local bind:
# unix:/path/to/file - bind to local socket
# inet:port@host - bind to inet socket
# Default: bind_socket = unix:/var/tmp/rmilter.sock;

bind_socket = unix:/var/run/rmilter/rmilter.sock;

# tempdir - path to directory that contains temporary files
# Default: $TMPDIR

tempdir = /spool/tmp;

# tempfiles_mode - mode for files created in the tempdir
# Default: 0600
# tempfiles_mode = 0600;

# max_size - maximum size of scanned mail with clamav and dcc
# Default: 0 (no limit)
max_size = 10M;

# spf_domains - path to file that contains hash of spf domains
# Default: empty

spf_domains = rambler.ru, mail.ru;

# use_dcc - whether use or not dcc system
# Default: no

use_dcc = yes;

# whitelisted recipients
# domain are whitelisted as @example.com
whitelist = postmaster, abuse;

# rule definition:
# rule {
#	accept|discard|reject|tempfail|quarantine "[message]"; <- action definition
#	[not] connect <regexp> <regexp>; <- conditions
#	helo <regexp>;
#	envfrom <regexp>;
#	envrcpt <regexp>;
#	header <regexp> <regexp>;
#	body <regexp>;
# };

# limits section
limits {
	# Whitelisted ip
	limit_whitelist_ip = 194.67.45.4;
	# Whitelisted recipients
	limit_whitelist_rcpt =  postmaster, mailer-daemon;
	# Addrs for bounce checks
	limit_bounce_addrs = postmaster, mailer-daemon, symantec_antivirus_for_smtp_gateways, <>, null, fetchmail-daemon;
	# Limit for bounce mail
	limit_bounce_to = 5:0.000277778;
	# Limit for bounce mail per one source ip
	limit_bounce_to_ip = 5:0.000277778;
	# Limit for all mail per recipient
	limit_to = 20:0.016666667;
	# Limit for all mail per one source ip
	limit_to_ip = 30:0.025;
	# Limit for all mail per one source ip and from address
	limit_to_ip_from = 100:0.033333333;
};

beanstalk {
	# List of beanstalk servers, random selected
	servers = queue.example.com:3132;
	# Time to live for task in seconds
	lifetime = 172800;
	# Regexp that define for which messages we should put the whole message to beanstalk
	# now only In-Reply-To headers are checked
	id_regexp = "/^SomeID.*$/";
};

dkim {
    domain {
        key = /usr/local/etc/dkim_example.key;
        domain = "example.com";
        selector = "dkim";
    };
    domain {
        key = /usr/local/etc/dkim_test.key;
        domain = "test.com";
        selector = "dkim";
    };
    header_canon = relaxed;
    body_canon = relaxed;
    sign_alg = sha256;
};

.Ed
.Sh NOTES
There are several things that might be useful to notice.
.Sh The order of checks:
.Bl -enum -compact
.It
DKIM test from and create signing context (MAIL FROM)
.It
Ratelimit (RCPT TO)
.It
Greylisting (DATA)
.It
Ratelimit (EOM, set bucket value)
.It
Rules (EOM)
.It
SPF (EOM)
.It
Message size (EOM) if failed, skip clamav, dcc and spamd checks
.It
DCC (EOM)
.It
Spamd (EOM)
.It
Clamav (EOM)
.It
Beanstalk (EOM)
.It
DKIM add signature (EOM)
.El
.Pp
.Sh Keys used in memcached/redis:
.Bl -bullet -compact
.It
.Em rcpt
- bucket for rcpt filter
.It
.Em rcpt:ip
- bucket for rcpt_ip filter
.It
.Em rcpt:ip:from
- bucket for rcpt_ip_from filter
.It
.Em rcpt:<>
- bucket for bounce_rcpt filter
.It
.Em rcpt:ip:<>
- bucket for bounce_rcpt_ip filter
.It
.Em md5(from . ip . to)
- key for greylisting triplet (hexed string of md5 value)
.El
.Sh Postfix settings
There are several useful settings for postfix to work with this milter:
.Bd -literal
smtpd_milters = unix:/var/run/rmilter/rmilter.sock
milter_mail_macros =  i {mail_addr} {client_addr} {client_name}
milter_protocol = 4
.Ed
